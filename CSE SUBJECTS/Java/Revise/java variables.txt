
static variables:

    A static variable is common to all the instances (or objects) of the class because
    it is a class level variable. In other words you can say that only a single copy of4
    static variable is created and shared among all the instances of the class. 
    Memory allocation for such variables only happens once when the class is loaded in the memory.




Example 2: Static Variable can be accessed directly in a static method

                class JavaExample{
                static int age;
                static String name;

                //This is a Static Method
                static void disp(){
                    System.out.println("Age is: "+age);
                    System.out.println("Name is: "+name);
                }

                // This is also a static method
                public static void main(String args[]) 
                {
                    age = 30;
                    name = "Steve";
                    disp();
                }
                }

                Output:

                Age is: 30
                Name is: Steve


======================================================================================================
Static variable initialization

    Static variables are initialized when class is loaded.
    Static variables are initialized before any object of that class is created.
    Static variables are initialized before any static method of the class executes.
    
Default values for static and non-static variables are same.
    primitive integers(long, short etc): 0
    primitive floating points(float, double): 0.0
    boolean: false
    object references: null

==========================================================================================================

Static final variables


    The static final variables are constants. 


    public class MyClass{
        public static final int MY_VAR=27;
    }

    1) The above code will execute as soon as the class MyClass is loaded,
        before static method is called and even before any static variable can be accessed.
    2) The variable MY_VAR is public which means any class can use it. 
        It is a static variable so you won’t need any object of class in order to access it.
        It’s final so the value of this variable can never be changed in the current or in any class.

    Key points:
    final variable always needs initialization, if you don’t initialize it would throw a compilation error. have a look at below example-

    public class MyClass{
        public static final int MY_VAR;
    }

    Error: variable MY_VAR might not have been initialized


















