1) Java is a platform-independent language because it has runtime environment i.e JRE and API



2) Java codes are compiled into byte code or machine-independent code. 
    This byte code is run on JVM (Java Virtual Machine).


========================================================================================================

Features:


1) Simple
    Java is easy to learn and its syntax is quite simple, clean and easy to understand.The confusing 
    and ambiguous concepts of C++ are either left out in Java or they have been re-implemented 
    in a cleaner way.
    Eg : Pointers and Operator Overloading are not there in java but were an important part of C++.

2) Object Oriented

3) Robust
    Java makes an effort to eliminate error prone codes by emphasizing mainly on compile time 
    error checking and runtime checking.
    But the main areas which Java improved were Memory Management and mishandled
    Exceptions by introducing automatic Garbage Collector and Exception Handling


4) Platform Independent
    Unlike other programming languages such as C, C++ etc which are compiled into platform 
    specific machines. Java is guaranteed to be write-once, run-anywhere language.

    On compilation Java program is compiled into bytecode. This bytecode is platform independent 
    and can be run on any machine, plus this bytecode 
    format also provide security. Any machine with Java Runtime Environment can run Java Programs.

5) Secure

6) Multi Threading

8) Portable
    Java Byte code can be carried to any platform. No implementation dependent features.
    Everything related to storage is predefined, example: size of primitive data types


9) High Performance
    Java is an interpreted language, so it will never be as fast as a compiled language like C or C++. 
    But, Java enables high performance with the use of just-in-time compiler.


===========================================================================================================================

Java Editions

1. Java Standard Edition
    Java Standard edition is a computing platform which is used for development 
    and deployment of portable code that is used in desktop and server environments.
    Java Standard Edition is also known as Java 2 Platform, Standard Edition (J2SE).
    Java Standard Edition has a wide range of APIs such as Java Class Library etc. 
    the best implementation of Java SE is Oracle Corporationâ€™s Java Development Kit (JDK)


2. Java Micro Edition
    Java Micro Edition is a computing platform which is used for the development and 
    deployment of portable codes for the embedded and mobile devices. 
    Java Micro Edition is also known as Java 2 Platform Micro Edition (J2ME).
     The Java Micro Edition was designed by Sun Microsystems and then later on Oracle 
     corporation acquired it in 2010.

    Example: micro-controllers, sensors, gateways, mobile phones, printers etc



3. Java Enterprise Edition
    Java Enterprise Edition is a set of specifications and extending Java SE 8 with features such as 
    distributed computing and web services. The applications of Java Enterprise Edition run on 
    reference runtimes. This reference runtime handle transactions, security, scalability,
    concurrency and the management of components to be deployed. Java Enterprise Edition is also
    known as Java 2 Platform Enterprise Edition (J2EE), and currently, 
    it has been rebranded as Jakarta EE.

    Example: e-commerce, accounting, banking information systems.


4. JavaFX
    JavaFX is used for creating desktop applications and also rich internet applications(RIAs)
    which can be run on a wide variety of devices. JavaFX has almost replaced Swing as the 
    standard GUI library for Java Standard Edition. 
    JavaFX support for desktop computers and web browsers.


==================================================================================================================












