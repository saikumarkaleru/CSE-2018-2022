Java garbage collection is the process of releasing unused memory occupied by unused objects. 
This process is done by the JVM automatically because it is essential for memory management.

When a Java programs run on the JVM, objects are created on the heap, which is a portion of 
memory dedicated to the program. Eventually, some objects will no longer be needed.

When there is no reference to an object, then that object is assumed to be no longer needed 
and the memory occupied by the object are released. This technique is called Garbage Collection.




Can the Garbage Collection be forced explicitly ?

    No, the Garbage Collection can not be forced explicitly.
     We may request JVM for garbage collection by calling System.gc() method. 
     But This does not guarantee that JVM will perform the garbage collection.

Advantages of Garbage Collection
    Programmer doesn't need to worry about dereferencing an object.
    It is done automatically by JVM.
    Increases memory efficiency and decreases the chances for memory leak



finalize() method
    Sometime an object will need to perform some specific task before 
    it is destroyed such as closing an open connection or releasing any resources held.
    To handle such situation finalize() method is used.

    The finalize() method is called by garbage collection thread before collecting object.
     Its the last chance for any object to perform cleanup utility